{"ast":null,"code":"const className = \"tetromino\";\nexport const TETROMINOES = {\n  I: {\n    shape: [[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]],\n    className: `${className} ${className}__i`\n  },\n  J: {\n    shape: [[0, 1, 0], [0, 1, 0], [1, 1, 0]],\n    className: `${className} ${className}__j`\n  },\n  L: {\n    shape: [[0, 1, 0], [0, 1, 0], [0, 1, 1]],\n    className: `${className} ${className}__l`\n  },\n  O: {\n    shape: [[1, 1], [1, 1]],\n    className: `${className} ${className}__o`\n  },\n  S: {\n    shape: [[0, 1, 1], [1, 1, 0], [0, 0, 0]],\n    className: `${className} ${className}__s`\n  },\n  T: {\n    shape: [[1, 1, 1], [0, 1, 0], [0, 0, 0]],\n    className: `${className} ${className}__t`\n  },\n  Z: {\n    shape: [[1, 1, 0], [0, 1, 1], [0, 0, 0]],\n    className: `${className} ${className}__z`\n  }\n};\nexport const transferToBoard = ({\n  className,\n  isOccupied,\n  position,\n  rows,\n  shape\n}) => {\n  shape.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell) {\n        const occupied = isOccupied;\n        const _y = y + position.row;\n        const _x = x + position.column;\n        rows[_y][_x] = {\n          occupied,\n          className\n        };\n      }\n    });\n  });\n  return rows;\n};","map":{"version":3,"names":["className","TETROMINOES","I","shape","J","L","O","S","T","Z","transferToBoard","isOccupied","position","rows","forEach","row","y","cell","x","occupied","_y","_x","column"],"sources":["/home/franco/Documents/desarrolloWeb/repos/tetris/src/business/tetrominoes.js"],"sourcesContent":["const className = \"tetromino\";\n\nexport const TETROMINOES = {\n  I: {\n    shape: [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n    ],\n    className: `${className} ${className}__i`,\n  },\n  J: {\n    shape: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n    className: `${className} ${className}__j`,\n  },\n  L: {\n    shape: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    className: `${className} ${className}__l`,\n  },\n  O: {\n    shape: [\n      [1, 1],\n      [1, 1],\n    ],\n    className: `${className} ${className}__o`,\n  },\n  S: {\n    shape: [\n      [0, 1, 1],\n      [1, 1, 0],\n      [0, 0, 0],\n    ],\n    className: `${className} ${className}__s`,\n  },\n  T: {\n    shape: [\n      [1, 1, 1],\n      [0, 1, 0],\n      [0, 0, 0],\n    ],\n    className: `${className} ${className}__t`,\n  },\n  Z: {\n    shape: [\n      [1, 1, 0],\n      [0, 1, 1],\n      [0, 0, 0],\n    ],\n    className: `${className} ${className}__z`,\n  },\n};\n\nexport const transferToBoard = ({\n  className,\n  isOccupied,\n  position,\n  rows,\n  shape,\n}) => {\n  shape.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell) {\n        const occupied = isOccupied;\n        const _y = y + position.row;\n        const _x = x + position.column;\n        rows[_y][_x] = { occupied, className };\n      }\n    });\n  });\n\n  return rows;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}